/**
 * Queue
 */

path /test_tasks {
  read() { true }
  write() { true }
}

path /queue {
  read() { true }
  write() { true }
}

path /queue/tasks {
  index() { ['_state'] }
}

/**
 * Languages
 */

path /Languages {
  read() { true }
  write() { isServerWorker() }
}

path /Languages/{id} is Language;

path /_language_projects/{id} is LanguageProject;

type Language {
  name: String,
  projectsCount: Number | Null
  tutorialsCount: Number | Null
}

type LanguageProject {
  $other: Boolean
}

/**
 * Projects
 */

path /Projects {
  read() { true }
  write() { isServerWorker() }
}

path /Projects/{id} is Project;

type Project {
  name: String
  description: String | Null
  languages: Map<String, String>
  homepage: String | Null
  repository: String | Null
  keywords: String[]
  tutorialsCount: Number
  projectsCount: Number
}

/**
 * Users
 */

path /Users/{uid} is User {
  read() { isCurrentUser(uid) }
  write() { isCurrentUser(uid) }
}

type User {
  uid: String
  username: String
}

/**
 * Tutorials
 */

path /Tutorials {
  read() { true }
  index() { [ 'domain' ] }
}

path /Tutorials/{id} is Tutorial {
  write() { createOnly(this) && isSignedIn() || isCurrentUser(this.uid) }
}

type Tutorial {
  uid: String
  title: String
  description: String | Null
  createdAt: Number
}

/**
 * Comments
 */

path /Comments {
  read() { true }
  index() { [ 'tutorial' ] }
}

path /Comments/{id} is Comment {
  write() { createOnly(this) && isSignedIn() || isCurrentUser(this.uid) }
}

type Tutorial {
  uid: String
  title: String
  description: String | Null
  createdAt: Number
}

//
// Helper Functions
//
isServerWorker() { auth != null && auth.uid == 'server_worker' }
isCurrentUser(uid) { isSignedIn() && auth.uid == uid }
isSignedIn() { auth != null }
createOnly(value) { prior(value) == null && value != null }